from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import re
from openpyxl import Workbook
import time

# Danh sách SBD thiếu
sbd_thieu = [2000006, 2000017, 2000019, 2000056, 2000060, 2000104, 2000105, 2000148, 2000172, 2000174, 2000185, 2000187, 2000241, 2000254, 2000314, 2000318, 2000325, 2000371, 2000374, 2000422, 2000465, 2000466, 2000486, 2000517, 2000521, 2000587, 2000590, 2000688, 2000752, 2000821, 2000831, 2000854, 2000921, 2000962, 2000999, 2001020, 2001024, 2001623, 2001654, 2002461, 2002615, 2002846, 2002847, 2002848, 2002849, 2002850, 2002851, 2002852, 2002853, 2002854, 2002855, 2002856, 2002857, 2002858, 2002859, 2002860, 2002861, 2002862, 2002863, 2002864, 2002865, 2002866, 2002867, 2002868, 2002869, 2002870, 2002871, 2002872, 2002873, 2002874, 2002875, 2002876, 2002877, 2002878, 2002879, 2002880, 2002881, 2002882, 2002883, 2002884, 2002885, 2002886, 2002887, 2002888, 2002889, 2002890, 2002891, 2002892, 2002893, 2002894, 2002895, 2002896, 2002897, 2002898, 2002899, 2002900, 2002901, 2002902, 2002903, 2002904, 2002905, 2002906, 2002907, 2002908, 2002909, 2002910, 2002911, 2002912, 2002913, 2002914, 2003011, 2003012, 2003015, 2003016, 2003017, 2003018, 2003019, 2003542, 2003810, 2003965, 2004231, 2004448, 2004536, 2004547, 2004923, 2004929, 2005240, 2005511, 2005565, 2006104, 2006216, 2006399, 2007385, 2007486, 2007495, 2007529, 2007591, 2007592, 2007593, 2007764, 2007774, 2007787, 2007806, 2008545, 2008831, 2008902, 2008926, 2009109, 2009214, 2009369, 2009542, 2009618, 2010417, 2010527, 2011510, 2011550, 2011579, 2012142, 2012230, 2012234, 2012260, 2012288, 2013384, 2014810, 2015422, 2015490, 2015494, 2015530, 2015559, 2015571, 2015578, 2015585, 2015593, 2015618, 2015700, 2015813, 2015827, 2015873, 2015876, 2015894, 2015924, 2016160, 2016203, 2016231, 2016404, 2016411, 2016450, 2016508, 2016555, 2016596, 2016608, 2016652, 2016670, 2016680, 2016699, 2016700, 2016713, 2017004, 2017064, 2017065, 2017153, 2017264, 2017477, 2017494, 2017497, 2017504, 2017505, 2017518, 2017529, 2017538, 2017542, 2017544, 2017549, 2017553, 2017567, 2017569, 2017580, 2017599, 2017609, 2017714, 2017836, 2017848, 2017872, 2017885, 2017889, 2017910, 2018990, 2019953, 2019966, 2019974, 2020461, 2020552, 2020553, 2020554, 2020555, 2020556, 2020557, 2020558, 2020559, 2020560, 2020561, 2020562, 2021258, 2021745, 2021826, 2021986, 2022719, 2023663, 2023706, 2023758, 2024009, 2024085, 2024642, 2025850, 2026082, 2026935, 2026956, 2027041, 2027083, 2027465, 2027501, 2028348, 2029183, 2029287, 2029288, 2029289, 2029290, 2029291, 2029292, 2029293, 2029294, 2029295, 2029296, 2029297, 2029298, 2029299, 2029300, 2029301, 2029302, 2029303, 2029304, 2029305, 2029306, 2029307, 2029308, 2029309, 2029311, 2029312, 2029419, 2029632, 2029950, 2031732, 2031761, 2031821, 2032035, 2032842, 2032940, 2033017, 2033290, 2033417, 2033465, 2033474, 2033493, 2033527, 2033552, 2033563, 2033567, 2033720, 2033770, 2034127, 2034922, 2034927, 2034959, 2035034, 2035045, 2035149, 2035179, 2035183, 2035219, 2035222, 2035232, 2035233, 2035242, 2035308, 2035311, 2035314, 2035336, 2035339, 2035369, 2035380, 2035427, 2035492, 2035525, 2035621, 2035673, 2035674, 2035675, 2035752, 2035770, 2035795, 2035796, 2035797, 2035839, 2035868, 2035877, 2035889, 2035890, 2036049, 2036321, 2036397, 2036444, 2036468, 2036470, 2036471, 2036526, 2036644, 2036749, 2036915, 2036916, 2036944, 2036979, 2036990, 2037294, 2037588, 2037684, 2038107, 2038308, 2038404, 2039202, 2039798, 2041765, 2043232, 2043376, 2043708, 2044297, 2045524, 2045525, 2045535, 2045585, 2046017, 2046402, 2046533, 2046835, 2046914, 2047332, 2048843, 2049350, 2049523, 2050968, 2050986, 2052037, 2053789, 2055704, 2056479, 2057479, 2057869, 2057931, 2058193, 2058206, 2058685, 2059284, 2061436, 2061494, 2062841, 2063131, 2063439, 2063890, 2065009, 2065348, 2065583, 2065961, 2066093, 2066099, 2066290, 2066330, 2066473, 2067812, 2067869, 2067881, 2067913, 2068063, 2069141, 2070579, 2072818, 2072856, 2072909, 2072993, 2074674, 2075412, 2076360, 2076591, 2078815, 2079425, 2080037, 2080250, 2080709, 2080871, 2080873, 2080874, 2080876, 2080880, 2080897, 2080920, 2080921, 2080933, 2080947, 2080967, 2080972, 2080974, 2081000, 2081001, 2081009, 2081021, 2081026, 2081033, 2081040, 2081055, 2081059, 2081060, 2081061, 2081092, 2081105, 2081114, 2081121, 2081127, 2081134, 2081175, 2081193, 2081198, 2081224, 2081237, 2081248, 2081257, 2081259, 2081265, 2081298, 2081313, 2081316, 2081355, 2081358, 2081367, 2081374, 2081379, 2081382, 2081384, 2081403, 2081406, 2081417, 2081451, 2081492, 2081499, 2081531, 2081552, 2081558, 2081595, 2081680, 2081705, 2081775, 2082076, 2082615, 2082636, 2082665, 2082737, 2084109, 2084908, 2086080, 2086279, 2087239, 2087523, 2087993, 2088875, 2089018, 2091679, 2091907, 2091908, 2091909, 2091910, 2091911, 2091912, 2092040, 2092087, 2093734]
# Chuyển sang định dạng '02XXXXXX'
ds_sbd = [f"020{str(i)[2:]}" for i in sbd_thieu]

# Cấu hình trình duyệt
options = Options()
prefs = {"profile.managed_default_content_settings.images": 2}
options.add_experimental_option("prefs", prefs)
# options.add_argument("--headless")
driver = webdriver.Chrome(options=options)
wait = WebDriverWait(driver, 5)

# Tạo file Excel
wb = Workbook()
ws = wb.active
tieu_de = ["Số báo danh", "Họ tên", "Ngày sinh"]
ws.append(tieu_de)
cac_mon = []

driver.get("https://diemthi.hcm.edu.vn/")
for sbd in ds_sbd:
    try:
        sbd_input = wait.until(EC.presence_of_element_located((By.ID, "SoBaoDanh")))
        sbd_input.clear()
        sbd_input.send_keys(sbd)

        submit_btn = driver.find_element(By.CLASS_NAME, "g-recaptcha")
        submit_btn.click()

        try:
            WebDriverWait(driver, 3).until(EC.presence_of_element_located((By.XPATH, "//table//tr[2]")))
        except:
            print(f"⏭️ {sbd}: Không có kết quả hoặc timeout.")
            driver.get("https://diemthi.hcm.edu.vn/")
            continue

        rows = driver.find_elements(By.XPATH, "//table//tr")
        if len(rows) < 2:
            print(f"{sbd}: Không có dữ liệu.")
            driver.get("https://diemthi.hcm.edu.vn/")
            continue

        cols = rows[1].find_elements(By.TAG_NAME, "td")
        if len(cols) < 3:
            print(f"{sbd}: Không đủ cột dữ liệu.")
            driver.get("https://diemthi.hcm.edu.vn/")
            continue

        ho_ten = cols[0].text.strip()
        ngay_sinh = cols[1].text.strip()
        ket_qua = cols[2].text.strip()

        matches = re.findall(r'([A-Za-zÀ-Ỹà-ỹ\s]+):\s*([\d.]+)', ket_qua)
        diem_dict = {mon.strip(): diem for mon, diem in matches}

        for mon in diem_dict:
            if mon not in cac_mon:
                cac_mon.append(mon)
                col_index = len(tieu_de) + cac_mon.index(mon) + 1
                ws.cell(row=1, column=col_index, value=mon)

        row_data = [sbd, ho_ten, ngay_sinh]
        for mon in cac_mon:
            row_data.append(diem_dict.get(mon, ""))

        ws.append(row_data)

        print(f"✅ {sbd}: {ho_ten} - {diem_dict}")
        driver.get("https://diemthi.hcm.edu.vn/")

        time.sleep(0.5)  # tránh bị block

    except Exception as e:
        print(f"❌ Lỗi với {sbd}: {e}")
        driver.get("https://diemthi.hcm.edu.vn/")

# Lưu kết quả
wb.save("diem_SBD_thieu.xlsx")
driver.quit()
print("✅ Đã hoàn tất và lưu file `diem_SBD_thieu.xlsx`.")
